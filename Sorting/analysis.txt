10 7 5 3 6 1 8
sep_index = 3

for (i = 0; i < sep_index; ++i)

i = 0
if (arr[i] > arr[sep_index + 1])
	swap(arr[i], arr[sep_index + 1])

Что нам важнее, sep_elem (value) или sep_index (номер)? Нам важнее номер, т.к. потом мы запускаем quicksort, основываясь на sep_index.

i = 1
6 7 5 3 10 1 8

i = 2
6 7 5 3 10 1 8

i = 3
6 7 5 3 10 1 8



===============================================================================================================================================

Нет, нам всё-таки важнее value (arr[sep_index], а sep_index - этот индекс нужен только, чтобы произвольно взять элемент).

10 7 5 6 3 1 8
sep_value = arr[left + right / 2] = 6
sep_index = 3 (left + right / 2)

В начале ставим sep_value в самый левый элемент массива, т.к. будем сортировать массив на две половины: < sep_value, > sep_value.


swap(sep_index, 0)
sep_index = 0
6 10 7 5 3 1 8

i = 1 (left+1)
10 > 6: OK

i = 2
7 > 6: OK

i = 3
5 < 6: swap(i, sep_index+1), swap(sep_index, sep_index+1)
sep_index = sep_index + 1
5 6 7 10 3 1 8

i = 4
3 < 6: swap(i, sep_index+1), swap(sep_index, sep_index+1)
sep_index = sep_index + 1
5 3 6 10 7 1 8

i = 5
1 < 6: swap(i, sep_index+1), swap(sep_index, sep_index+1)
sep_index = sep_index + 1
5 3 1 6 7 10 8

i = 6
8 > 6: OK


































